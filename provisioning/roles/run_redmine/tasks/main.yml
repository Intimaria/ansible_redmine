- name: Install Bundler                                                                                                                                                                                                            
  shell: ~/.rbenv/shims/gem install bundler                                                                                                                                              
  args: 
    executable: /bin/bash
  tags:
    - ruby
    - install_redmine

# Takes ages, good to have but can comment out if needed
# - name: Gem Update for System 
#   shell: "~/.rbenv/shims/gem update --system"
#   args: 
#     chdir: "{{ redmine_path }}" 
#     executable: /bin/bash
#   tags:
#     install_redmine

- name: Set Local Path
  shell: '~/.rbenv/shims/bundle config set 
         --local path vendor/bundle'
  args:
    chdir: "{{ redmine_path }}"
    executable: /bin/bash
  tags:
    install_redmine

- name: Bundle Install 
  shell: "~/.rbenv/shims/bundle install"
  args: 
    chdir: "{{ redmine_path }}" 
    executable: /bin/bash
  tags:
    install_redmine

- name: Bundle Update 
  shell: "~/.rbenv/shims/bundle update"
  args: 
    chdir: "{{ redmine_path }}" 
    executable: /bin/bash
  tags:
    install_redmine

- name: Install Strscan
  gem: 
    name: strscan
    state: latest
    executable: "~/.rbenv/shims/gem"
  tags:
    install_redmine

- name: Install Io-Wait
  gem: 
    name: io-wait
    state: latest
    executable: "~/.rbenv/shims/gem"
  tags:
    install_redmine

- name: Create Gemfile.lock
  file: 
    path: "{{ redmine_path }}/Gemfile.lock"
    state: touch
  tags:
    install_redmine

- name: Generate Secret 
  shell: '~/.rbenv/shims/bundle exec 
          rake generate_secret_token'
  args:
    chdir: "{{ redmine_path }}"
    executable: /bin/bash
  tags:
    install_redmine

- name: Rake DB Migrate
  shell: 'RAILS_ENV=production ~/.rbenv/shims/bundle 
          exec rake db:migrate'
  args:
    chdir: "{{ redmine_path }}"
    executable: /bin/bash
  tags:
    install_redmine

- name: Rake Load Defaults
  expect:
    command: /bin/bash -c "~/.rbenv/shims/bundle 
              exec rake redmine:load_default_data 
              RAILS_ENV=production"
    responses:
      (.*)Select language(.*): en
  args:
    chdir: "{{ redmine_path }}"
  register: load_defaults
  ignore_errors: yes
  tags:
    install_redmine

- name: Make Tmp/Pdf
  file:
    path: "{{ redmine_path }}/tmp/pdf"
    state: directory
    owner: "{{ user_name }}"
    group: "{{ group_name }}"
    mode: 0755
  tags:
    install_redmine

#-------------- PUMA -----------# 

- name: Remove Puma From Test Block in Gemfile 
  lineinfile:
    path: "{{ redmine_path }}/Gemfile"
    regexp: gem 'puma'
    state: absent 
  register: test_puma
  tags:
    install_puma 

- name: Add Puma To Gemfile 
  lineinfile:
    path: "{{ redmine_path }}/Gemfile"
    insertafter: "^gem 'rails'"
    line: gem 'puma'
    state: present
  tags:
    install_puma 

- name: Bundle Install 
  shell: "~/.rbenv/shims/bundle install"
  args: 
    chdir: "{{ redmine_path }}" 
    executable: /bin/bash
  tags:
    install_puma 

- name:  Copy Puma Config File
  become: yes
  become_user: root 
  copy:
    src: templates/puma.rb.j2
    dest: "{{ redmine_path }}/config/puma.rb"
    owner: "{{ group_name }}"
    group: "{{ group_name }}"
  tags: 
    - install_puma

- name: Check Puma.Service Exists 
  stat: 
    path: /etc/systemd/system/puma.service
  register: puma_service_file
  ignore_errors: yes 
  tags: 
    - install_puma
    
- name: Install Puma Service 
  become: yes
  become_user: root 
  copy:
    src: templates/puma.service.j2
    dest: /etc/systemd/system/puma.service
    owner: root
    group: root
  tags: 
    - install_puma
  when: not puma_service_file.stat.exists 

- name: Start Puma Service
  become: yes
  become_user: root 
  systemd:
    state: started
    enabled: yes
    name: puma.service
  tags: 
    - install_puma

# ------- use puma directly ----------- # 

# - name: Open Port 3000
#   become: yes
#   become_user: root
#   shell: 'sudo ufw allow 3000/tcp'
#   args:
#     chdir: "{{ redmine_path }}"
#     executable: /bin/bash
#   tags:
#     - web

# - name: Check if Application Server is Up 
#   shell: 'lsof -i :3000 -t'
#   register: server_up
#   ignore_errors: yes
#   tags:
#     - web

# - name: Run Puma Server
#   shell: ' ~/.rbenv/shims/bundle exec puma -C config/puma.rb -e production'
#   args:
#     chdir: "{{ redmine_path }}"
#     executable: /bin/bash
#   when: server_up.rc == 1 
#   tags:
#     - web

# -----------_ Webrick Test ------------# 

# - name: Run Test Server
#   shell: ' ~/.rbenv/shims/bundle exec rails server -u webrick -e production -d'
#   args:
#     chdir: "{{ redmine_path }}"
#     executable: /bin/bash
#   when: server_up.rc == 1 
#   tags:
#     - test_webrick

